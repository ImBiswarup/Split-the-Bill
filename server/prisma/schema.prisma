generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(cuid())
  name        String?
  email       String      @unique
  password    String
  isAdmin     Boolean     @default(false)
  bills       Bills[]     @relation("BillOwner")
  billSplits  BillSplit[]
  adminGroups Group[]     @relation("GroupAdmin")
  groups      Group[]     @relation("GroupUsers")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Expenses {
  id          String   @id @default(cuid())
  amount      Float
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Bills {
  id          String      @id @default(cuid())
  ownerId     String
  groupId     String? // Optional field to link bills to groups
  amount      Float
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  isPaid      Boolean     @default(false)
  owner       User        @relation("BillOwner", fields: [ownerId], references: [id])
  group       Group?      @relation("GroupBills", fields: [groupId], references: [id])
  splits      BillSplit[]
}

model BillSplit {
  id     String  @id @default(cuid())
  billId String
  userId String
  amount Float
  isPaid Boolean @default(false) 
  bill   Bills   @relation(fields: [billId], references: [id])
  user   User    @relation(fields: [userId], references: [id])
}

model Group {
  id          String   @id @default(cuid())
  name        String
  description String?
  adminId     String
  admin       User     @relation("GroupAdmin", fields: [adminId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  users User[]  @relation("GroupUsers")
  bills Bills[] @relation("GroupBills") // Add relation to bills
}
